{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "4196088454573182748"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "prefix": {
      "type": "string",
      "defaultValue": "ttnv3",
      "metadata": {
        "description": "Prefix to use when creating Azure resources"
      },
      "maxLength": 6
    },
    "adminEmail": {
      "type": "string",
      "metadata": {
        "description": "E-mail address of the administrator"
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the 'admin' user in the Things Stack console"
      }
    },
    "networkName": {
      "type": "string",
      "defaultValue": "The Things Stack on Azure ðŸš€",
      "metadata": {
        "description": "The name to give to your Things Stack network"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "VM Size. For available virtual machine sizes, see https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/2019-07-01/virtualmachines#HardwareProfile"
      }
    },
    "vmUserName": {
      "type": "string",
      "metadata": {
        "description": "VM User name. Used to log into the main virtual machine"
      }
    },
    "vmAuthenticationType": {
      "type": "string",
      "defaultValue": "password",
      "metadata": {
        "description": "VM Authentication type (SSH Public key or password)"
      },
      "allowedValues": [
        "sshPublicKey",
        "password"
      ]
    },
    "vmAdminPasswordOrKey": {
      "type": "secureString"
    },
    "psqlPassword": {
      "type": "secureString",
      "metadata": {
        "description": "PostgreSQL database administrator password"
      }
    },
    "psqlSkuCapacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Azure database for PostgreSQL compute capacity (# of vCores)"
      },
      "allowedValues": [
        2,
        4,
        8,
        16,
        32,
        64
      ]
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[format('{0}-stack-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the main virtual machine"
      }
    }
  },
  "functions": [],
  "variables": {
    "resourcesPrefix": "[format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "psqlLogin": "ttn_pguser",
    "psqlDatabaseName": "ttn_lorawan",
    "vmName": "[format('{0}-vm', variables('resourcesPrefix'))]",
    "publicIPAddressName": "[format('{0}-publicip', variables('vmName'))]",
    "networkInterfaceName": "[format('{0}-networkif', variables('vmName'))]",
    "virtualNetworkName": "[format('{0}-vnet', variables('resourcesPrefix'))]",
    "subnetName": "[format('{0}-subnet', variables('resourcesPrefix'))]",
    "subnetRef": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), variables('subnetName'))]",
    "networkSecurityGroupName": "[format('{0}-secgroup', variables('resourcesPrefix'))]",
    "osDiskType": "Standard_LRS",
    "subnetAddressPrefix": "10.1.0.0/24",
    "addressPrefix": "10.1.0.0/16",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vmUserName'))]",
            "keyData": "[parameters('vmAdminPasswordOrKey')]"
          }
        ]
      }
    },
    "psqlResourceName": "[format('{0}-psql', variables('resourcesPrefix'))]",
    "keyVaultReaderRole": "[resourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
    "vmContributorRole": "[resourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "priority": 2000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "priority": 2100,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "TTN_Router",
            "properties": {
              "priority": 2200,
              "protocol": "Udp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "1700"
            }
          },
          {
            "name": "TTN_GatewayServerMQTTS",
            "properties": {
              "priority": 2300,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8882"
            }
          },
          {
            "name": "TTN_AppServerMQTTS",
            "properties": {
              "priority": 2400,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8883"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.SQL"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('vmUserName')]",
          "adminPassword": "[parameters('vmAdminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('vmAuthenticationType'), 'password'), null(), variables('linuxConfiguration'))]",
          "customData": "[reference(resourceId('Microsoft.Resources/deployments', 'generateCloudInitTask'), '2019-10-01').outputs.cloudInitFileAsBase64.value]"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'generateCloudInitTask')]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(variables('vmName'), variables('keyVaultReaderRole'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('vmName')), '2020-06-01', 'full').identity.principalId]",
        "roleDefinitionId": "[variables('keyVaultReaderRole')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(variables('vmName'), variables('vmContributorRole'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('vmName')), '2020-06-01', 'full').identity.principalId]",
        "roleDefinitionId": "[variables('vmContributorRole')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "postgreSQLDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "psqlResourceName": {
            "value": "[variables('psqlResourceName')]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "vnetID": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
          },
          "psqlSkuCapacity": {
            "value": "[parameters('psqlSkuCapacity')]"
          },
          "psqlLogin": {
            "value": "[variables('psqlLogin')]"
          },
          "psqlPassword": {
            "value": "[parameters('psqlPassword')]"
          },
          "psqlDatabaseName": {
            "value": "[variables('psqlDatabaseName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "5055848089161258452"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "subnetId": {
              "type": "string"
            },
            "vnetID": {
              "type": "string"
            },
            "psqlResourceName": {
              "type": "string"
            },
            "psqlSkuCapacity": {
              "type": "int"
            },
            "psqlLogin": {
              "type": "string"
            },
            "psqlPassword": {
              "type": "secureString"
            },
            "psqlDatabaseName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "privateDnsZoneName": "privatelink.postgres.database.azure.com"
          },
          "resources": [
            {
              "type": "Microsoft.DBForPostgreSQL/servers",
              "apiVersion": "2017-12-01",
              "name": "[parameters('psqlResourceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('psqlLogin')]",
                "administratorLoginPassword": "[parameters('psqlPassword')]",
                "createMode": "Default",
                "sslEnforcement": "Enabled",
                "publicNetworkAccess": "Enabled",
                "version": "10"
              },
              "sku": {
                "name": "GP_Gen5_2",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": "[parameters('psqlSkuCapacity')]"
              }
            },
            {
              "type": "Microsoft.DBForPostgreSQL/servers/virtualNetworkRules",
              "apiVersion": "2017-12-01",
              "name": "[format('{0}/vnet', parameters('psqlResourceName'))]",
              "properties": {
                "virtualNetworkSubnetId": "[parameters('subnetId')]",
                "ignoreMissingVnetServiceEndpoint": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBForPostgreSQL/servers', parameters('psqlResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.DBForPostgreSQL/servers/databases",
              "apiVersion": "2017-12-01-preview",
              "name": "[format('{0}/{1}', parameters('psqlResourceName'), parameters('psqlDatabaseName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.DBForPostgreSQL/servers', parameters('psqlResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-privateendpoint', parameters('psqlResourceName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-privateendpoint', parameters('psqlResourceName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.DBForPostgreSQL/servers', parameters('psqlResourceName'))]",
                      "groupIds": [
                        "postgresqlServer"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBForPostgreSQL/servers', parameters('psqlResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2018-09-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), uniqueString(parameters('vnetID')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetID')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2018-09-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), parameters('psqlResourceName'))]",
              "properties": {
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', format('{0}-privateendpoint', parameters('psqlResourceName')))).customDnsConfigs[0].ipAddresses[0]]"
                  }
                ],
                "ttl": 3600
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-privateendpoint', parameters('psqlResourceName')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            }
          ],
          "outputs": {
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBForPostgreSQL/servers', parameters('psqlResourceName'))).fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "generateCloudInitTask",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourcesPrefix": {
            "value": "[variables('resourcesPrefix')]"
          },
          "adminEmail": {
            "value": "[parameters('adminEmail')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "networkName": {
            "value": "[parameters('networkName')]"
          },
          "fqdn": {
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn]"
          },
          "redisHost": {
            "value": "redis_dummy_host"
          },
          "redisPort": {
            "value": 1234
          },
          "redisPassword": {
            "value": "redis_dummy_password"
          },
          "psqlHost": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'postgreSQLDeployment'), '2019-10-01').outputs.fqdn.value]"
          },
          "psqlPort": {
            "value": 5432
          },
          "psqlLogin": {
            "value": "[uriComponent(format('{0}@{1}', variables('psqlLogin'), variables('psqlResourceName')))]"
          },
          "psqlPassword": {
            "value": "[uriComponent(parameters('psqlPassword'))]"
          },
          "psqlDatabase": {
            "value": "[variables('psqlDatabaseName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "7174509261731835567"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "eastus"
            },
            "resourcesPrefix": {
              "type": "string"
            },
            "adminEmail": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "networkName": {
              "type": "string",
              "defaultValue": "The Things Stack"
            },
            "fqdn": {
              "type": "string",
              "metadata": {
                "description": "The fully qualified domain name of the server hosting the stack. Ex:  'myttn.francecentral.cloudapp.azure.com'"
              }
            },
            "redisHost": {
              "type": "string"
            },
            "redisPort": {
              "type": "int"
            },
            "redisPassword": {
              "type": "secureString"
            },
            "psqlHost": {
              "type": "string"
            },
            "psqlPort": {
              "type": "int"
            },
            "psqlLogin": {
              "type": "string"
            },
            "psqlPassword": {
              "type": "secureString"
            },
            "psqlDatabase": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "scriptName": "generateCloudInit",
            "identityName": "scratch",
            "customRoleName": "deployment-script-minimum-privilege-for-deployment-principal",
            "keyVaultSecretOfficerRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
            "keyVaultSecretOfficerRoleDefinitionName": "[guid(variables('identityName'), variables('keyVaultSecretOfficerRoleDefinitionId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[variables('identityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleDefinitions",
              "apiVersion": "2018-01-01-preview",
              "name": "[guid(variables('customRoleName'))]",
              "properties": {
                "roleName": "[variables('customRoleName')]",
                "description": "Configure least privilege for the deployment principal in deployment script",
                "permissions": [
                  {
                    "actions": [
                      "Microsoft.Storage/storageAccounts/*",
                      "Microsoft.ContainerInstance/containerGroups/*",
                      "Microsoft.Resources/deployments/*",
                      "Microsoft.Resources/deploymentScripts/*",
                      "Microsoft.Storage/register/action",
                      "Microsoft.ContainerInstance/register/action"
                    ]
                  }
                ],
                "assignableScopes": [
                  "[resourceGroup().id]"
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(variables('customRoleName'), variables('identityName'), subscription().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', guid(variables('customRoleName')))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleDefinitions', guid(variables('customRoleName')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('keyVaultSecretOfficerRoleDefinitionName')]",
              "properties": {
                "roleDefinitionId": "[variables('keyVaultSecretOfficerRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}-kv', parameters('resourcesPrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enableRbacAuthorization": true
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/ADMIN-PASSWORD', format('{0}-kv', parameters('resourcesPrefix')))]",
              "properties": {
                "value": "[parameters('adminPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcesPrefix')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/REDIS-PASSWORD', format('{0}-kv', parameters('resourcesPrefix')))]",
              "properties": {
                "value": "[parameters('redisPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcesPrefix')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/PSQL-PASSWORD', format('{0}-kv', parameters('resourcesPrefix')))]",
              "properties": {
                "value": "[parameters('psqlPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcesPrefix')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[variables('scriptName')]",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.24.0",
                "retentionInterval": "P1D",
                "primaryScriptUri": "https://raw.githubusercontent.com/kartben/thethingsstack-on-azure/noredis/generate-cloudinit.sh",
                "environmentVariables": [
                  {
                    "name": "KEYVAULT_NAME",
                    "value": "[format('{0}-kv', parameters('resourcesPrefix'))]"
                  },
                  {
                    "name": "NETWORK_NAME",
                    "value": "[parameters('networkName')]"
                  },
                  {
                    "name": "ADMIN_EMAIL",
                    "value": "[parameters('adminEmail')]"
                  },
                  {
                    "name": "ADMIN_PASSWORD",
                    "secureValue": "[parameters('adminPassword')]"
                  },
                  {
                    "name": "FQDN",
                    "value": "[parameters('fqdn')]"
                  },
                  {
                    "name": "REDIS_HOST",
                    "value": "[parameters('redisHost')]"
                  },
                  {
                    "name": "REDIS_PORT",
                    "value": "[string(parameters('redisPort'))]"
                  },
                  {
                    "name": "REDIS_PASSWORD",
                    "secureValue": "[parameters('redisPassword')]"
                  },
                  {
                    "name": "PSQL_HOST",
                    "value": "[parameters('psqlHost')]"
                  },
                  {
                    "name": "PSQL_PORT",
                    "value": "[string(parameters('psqlPort'))]"
                  },
                  {
                    "name": "PSQL_LOGIN",
                    "value": "[parameters('psqlLogin')]"
                  },
                  {
                    "name": "PSQL_PASSWORD",
                    "secureValue": "[parameters('psqlPassword')]"
                  },
                  {
                    "name": "PSQL_DATABASE",
                    "value": "[parameters('psqlDatabase')]"
                  }
                ],
                "supportingScriptUris": [
                  "https://raw.githubusercontent.com/kartben/thethingsstack-on-azure/noredis/cloud-init-template"
                ],
                "cleanupPreference": "OnSuccess",
                "timeout": "PT30M"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcesPrefix')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            }
          ],
          "outputs": {
            "cloudInitFileAsBase64": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName'))).outputs.cloudInitFileAsBase64]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'postgreSQLDeployment')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ]
    }
  ],
  "outputs": {
    "sshCommand": {
      "type": "string",
      "value": "[format('ssh {0}@{1}', parameters('vmUserName'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn)]"
    },
    "ttnConsoleUrl": {
      "type": "string",
      "value": "[format('https://{0}/console', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn)]"
    }
  }
}